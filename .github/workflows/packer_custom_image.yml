name: Build and Share Packer Images

on:
  push:
    branches:
      - main  # Runs only when code is merged to the main branch

jobs:
  build-image:
    name: Build AWS & GCP Images with Packer
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up GCP Credentials
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Install Packer
        uses: hashicorp/setup-packer@v3
        with:
          version: latest

      - name: Zip Repository Code
        run: |
          zip -r webapp.zip ./

      - name: Run Packer to Build Images
        id: packer
        run: |
          cd packer
          packer init main.pkr.hcl
          packer build -machine-readable main.pkr.hcl | tee packer.log

          # Extract AWS AMI ID (removing unwanted spaces or special characters)
          AMI_ID=$(awk -F, '/artifact,0,id/ {print $6}' packer.log | cut -d: -f2)

          # Extract GCP Image ID
          GCP_IMAGE_ID=$(awk -F, '/artifact,1,id/ {print $6}' packer.log | cut -d: -f2)

          # Validate and write to output
          if [[ "$AMI_ID" =~ ^ami-[a-zA-Z0-9]+$ ]]; then
              echo "New AWS AMI: $AMI_ID"
              echo "ami_id=$AMI_ID" >> $GITHUB_ENV
              echo "ami_id=$AMI_ID" >> $GITHUB_OUTPUT
              echo "AMI_CREATED=true" >> $GITHUB_ENV
          else
              echo "Error: Invalid AMI format ($AMI_ID)"
              exit 1
          fi

          if [[ -n "$GCP_IMAGE_ID" ]]; then
              echo "New GCP Image: $GCP_IMAGE_ID"
              echo "gcp_image_id=$GCP_IMAGE_ID" >> $GITHUB_ENV
              echo "gcp_image_id=$GCP_IMAGE_ID" >> $GITHUB_OUTPUT
              echo "AMI_CREATED=true" >> $GITHUB_ENV
          else
              echo "Error: Invalid GCP Image ID ($GCP_IMAGE_ID)"
              exit 1
          fi

      - name: Share AWS AMI with Demo Account
        if: env.AMI_CREATED == 'true'
        run: |
          aws ec2 modify-image-attribute \
            --image-id ${{ env.ami_id }} \
            --launch-permission "{\"Add\":[{\"UserId\":\"${{ secrets.DEMO_ACCOUNT_ID }}\"}]}"

      - name: Share GCP Image with Demo Account
        if: env.AMI_CREATED == 'true'
        run: |
          gcloud compute images add-iam-policy-binding ${{ env.gcp_image_id }} \
          --project=${{ secrets.GCP_PROJECT_ID }} \
          --member="user:${{ secrets.GCP_DEMO_ACCOUNT_EMAIL }}" \
          --role="roles/compute.imageUser"
